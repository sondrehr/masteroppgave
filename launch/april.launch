<launch>
  <!-- include blackfly launch file -->
  <include file="$(find blackfly)/launch/1_camera.launch"/>

  <!-- include apriltag_ros launch file -->
  <include file="$(find apriltag_ros)/launch/continuous_detection.launch"/>

  <!-- broadcast transforms -->
  <node name="tf2_platform_cam" pkg="tf2_ros" type="static_transform_publisher" args="0.099 0 0 0 0 0 /platform /cam" />
  <node name="tf2_april_drone" pkg="tf2_ros" type="static_transform_publisher" args="0 0 -0.15 0 0 pi /aprilTag_4 /drone" />

  <!-- create a trajectory service -->
  <node name="trajectory_service" pkg="precision_landing" output="screen" type="trajectory_service.py"/>

  <!-- rectify the image -->
  <node name="rectify" pkg="precision_landing" output="screen" type="rectify">
    <param name="subTopic" value="/cam0/cam0"/>
    <param name="pubTopic" value="/cam0_rect/cam0"/>

    <param name="invalidPixels" value="false"/>                    <!-- if false the image will be cropped so that no invalid pixels(black) are present -->
    <param name="cameraParams" value="../Desktop/catkin_ws/src/precision_landing/params.yaml" type="str"/>
  </node>

  <!-- launch the april node -->
  <node name="april" pkg="precision_landing" output="screen" type="april">
    
    <param name="markerSize" value="0.056"/>                      <!-- Size of the marker in meters -->
    <param name="estimateState" value="true"/>                    <!-- Estimate pose of the marker using KF?? -->
    <param name="publishBeta" value="false"/>                     <!-- Publish beta in the same terminal the launch file is executed. Mostly needed for testing -->

    <param name="nJointDensity" value="8"/>                       <!-- ~Number of joints in the trajectory per meter -->
    
    <param name="nPoses" value="10"/>                             <!-- Number of poses to be estimated in the KF. MUST BE CHANGED IF USING AN ID > VALUE -->

    <!-- Publish topics -->
    <param name="publishImage" value="true"/>                     <!-- Publish image with pose. Faster when off -->
    <param name="publishDistribution" value="true"/>              <!-- Publish distribution of the mean pose in the tangent space -->  
    <param name="publishTrajectory" value="true"/>                <!-- Publish planned trajectory -->
    <param name="publishTF" value="true"/>                      <!-- Publish pose of the marker -->
    
    <!-- Path to the camera calibration file -->
    <param name="cameraParams" value="../Desktop/catkin_ws/src/precision_landing/params.yaml" type="str"/>
  </node>
</launch>
