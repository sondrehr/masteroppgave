<launch>
  <!-- include blackfly launch file -->
  <include file="$(find blackfly)/launch/1_camera.launch"/>

  <!-- broadcast transforms -->
  <node name="tf2" pkg="tf2_ros" type="static_transform_publisher" args="0 0.099 -0.03 0 0 0 /platform /cam" />
  <node name="tf2_aruco_drone" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0.15 pi 0 0 /aprilTag_4 /drone" />

  <!-- create a trajectory service -->
  <node name="trajectory_service" pkg="precision_landing" output="screen" type="trajectory_service"/>

  <!-- rectify the image -->
  <node name="rectify" pkg="precision_landing" output="screen" type="rectify">
    <param name="subTopic" value="/cam0/cam0"/>
    <param name="pubTopic" value="/cam0_rect/cam0"/>

    <param name="invalidPixels" value="false"/>                    <!-- if false the image will be cropped so that no invalid pixels(black) are present -->
    <param name="cameraParams" value="../Desktop/catkin_ws/src/precision_landing/params.yaml" type="str"/>
  </node>

  <!-- launch the aruco node -->
  <node name="aruco" pkg="precision_landing" output="screen" type="aruco">
    <!-- Aruco dictionary type. NB only 4x4_50, 5x5_50 and 6x6_50. Not 4x4_100 etc... -->
    <!-- DICT_nxn_m: n is the number of squares in the marker's row/column, m is the number of bits per dimension. 4x4, 5x5, 6x6 -->
    <param name="dictionary" value="6X6"/>

    <param name="markerSize" value="0.075"/>                      <!-- Size of the marker in meters -->
    <param name="estimateState" value="true"/>                    <!-- Estimate pose of the marker using KF -->
    <param name="publishBeta" value="false"/>                      <!-- Publish beta -->

    <param name="nJointDensity" value="5"/>                       <!-- ~Number of joints in the trajectory per meter -->

    <param name="nPoses" value="10"/>                             <!-- Number of poses to be estimated in the KF. MUST BE CHANGED IF USING AN ID > VALUE -->
    <param name="pathInt" value="segment"/>                       <!-- Type of interpolation to be used on the path. Options: segment, bezier, straight -->
    <param name="rotInt" value="rotMat"/>                         <!-- Type of interpolation to be used on the rotation. Options: rotMat, yaw -->


    <!-- Publish topics -->
    <param name="publishImage" value="true"/>                     <!-- Publish image with pose. Faster when off -->
    <param name="publishDistribution" value="true"/>              <!-- Publish distribution of the mean pose in the tangent space -->  
    <param name="publishTrajectory" value="true"/>                <!-- Publish planned trajectory -->
    <param name="publishTF" value="true"/>                      <!-- Publish pose of the marker -->

    <!-- Path to the camera calibration file -->
    <param name="cameraParams" value="../Desktop/catkin_ws/src/precision_landing/params.yaml" type="str"/>
  </node>
</launch>